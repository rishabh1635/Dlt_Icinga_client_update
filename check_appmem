if [[ -z "$1" ]] || [[ -z "$2" ]] | [[ -z "$3" ]] ; then
        echo "Missing parameters! Syntax: check_mem_process <Processname> <Warning> <Error>"
        exit 2
fi

arg=$1
a=$(ps -ef | grep $arg | awk '{print $2}' |  tr '/\n' " " | awk '$1=$1' OFS='\\\|' | awk -v q="'" '{print "grep " q $0 q}')
tt=$(echo "top -bn 1 | $a | awk '{print "\$"10}' |  paste -sd+ - | bc")
StrCalc=$(eval $tt)
#echo "Memory Usage is $StrCalc | MemoryUsage=$StrCalc,80,100"
MemUsage=$StrCalc

if [[ -z "$StrCalc" ]]
then
echo "Critical - No Process Found"
exit 2
fi

compare_result=`echo "$2 >$MemUsage" | bc`

if [[ "$compare_result" -gt 0 ]]; then
        echo "OK MemUsage is $MemUsage % | MemUsage=$MemUsage;$2;$3;"
        exit 0
fi

compare_result=`echo "$MemUsage >$2" | bc`
if [[ "$compare_result" -gt 0 ]]; then
compare_result=`echo "$3 >$MemUsage" | bc`
        if [[ "$compare_result" -gt 0 ]]; then
        echo "WARNING - MemUsage is $MemUsage % | MemUsage=$MemUsage;$2;$3;"
        exit 1
fi
fi

compare_result=`echo "$MemUsage >$3" | bc`
if [[ "$compare_result" -gt 0 ]]; then
        echo "CRITICAL - MemUsage is $MemUsage % | MemUsage=$MemUsage;$2;$3;"
        exit 2
fi
